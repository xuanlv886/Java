<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
           http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<!--Quartz -->

	<!-- 集成方式：JobDetailFactoryBean，并且任务类需要继承QuartzJobBean -->
	<!-- 定义jobDetail -->

	<bean id="jobDetail"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<!-- durability 表示任务完成之后是否依然保留到数据库，默认false -->
		<property name="durability" value="true" />
		<!-- 目标类 /wmuitp/src/test/SpringQuartz.java -->
		<property name="jobClass" value="com.service.extra.mall.search.Timer" />
		<!-- 在这个例子中，jobDataAsMap没有用，此目标类中接受的参数 ,若参数为service，则可以在此进行参数配置，类似struts2 -->
		<!-- <property name="jobDataAsMap"> <map> <entry key="service"><value>simple 
			is the beat</value></entry> </map> </property> -->
	</bean>
	<!-- <bean id="jobDetail2"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		durability 表示任务完成之后是否依然保留到数据库，默认false
		<property name="durability" value="true" />
		目标类 /wmuitp/src/test/SpringQuartz.java
		<property name="jobClass" value="com.server.cfkj.timeshare.search.UpdateCouponStatus" />
		在这个例子中，jobDataAsMap没有用，此目标类中接受的参数 ,若参数为service，则可以在此进行参数配置，类似struts2
		<property name="jobDataAsMap"> <map> <entry key="service"><value>simple 
			is the beat</value></entry> </map> </property>
	</bean> -->

	<!-- 定义simpleTrigger触发器 -->
	<!-- <bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean"> 
		<property name="jobDetail" ref="jobDetail"></property> <property name="repeatCount"> 
		<value>8</value> </property> <property name="repeatInterval"> <value>1000</value> 
		</property> <property name="startDelay"> <value>4</value> </property> </bean> -->

	<!-- 另一种触发器是CornTrigger -->
	<bean id="cornTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="jobDetail" />
		<!-- 每个1小时触发 -->
		<property name="cronExpression" value="0 0 0/1 * * ?" />
		<!-- <property name="cronExpression" value="0/10 * * * * ?" /> -->
	</bean>
	<!-- 另一种触发器是CouponStatus -->
	<!-- <bean id="couponStatus"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="jobDetail2" />
		每晚12点触发
		<property name="cronExpression" value="0 0 0/1 * * ?" />
		<property name="cronExpression" value="0/10 * * * * ?" />
	</bean> -->
	
	
	<!-- 定义核心调度器 -->
	<bean id="scheduler"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cornTrigger" />
				<!-- <ref bean="couponStatus" /> -->
			</list>
		</property>
	</bean>

</beans>                